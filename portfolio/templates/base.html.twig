<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}Welcome!{% endblock %}</title>
        {# Run `composer require symfony/webpack-encore-bundle`
           and uncomment the following Encore helpers to start using Symfony UX #}

        <link href="{{ asset('build/css/app.css') }}" rel="stylesheet">
        {% block stylesheets %}
            {#{{ encore_entry_link_tags('app') }}#}
        {% endblock %}
        <script src="https://kit.fontawesome.com/7508d2ae4c.js" crossorigin="anonymous"></script>
        {% block javascripts %}
            {#{{ encore_entry_script_tags('app') }}#}
        {% endblock %}
    </head>
    <body>
    <header>
        {% include "front/include/_header.html.twig" %}

    </header>
    <section>
        <div class="container-fluid pt-3 pb-5 section_title" >

            <h2 class="text-center text-uppercase mt-3">Developpeur web sur Bordeaux</h2>
        </div>
    </section>
    <section>
        <div class="container section_career">
            <div class="row" >
                <div class="col-lg-6 col-12  ">
                    <h2 class="text-left mt-5" style="">MON PARCOURS</h2>
                    <div class="section_career__description">
                        <div class=" section_career__opacity">

                            <p class="mt-4">Depuis toujours j'ai voulu programmer, d'abord des jeux vidéos quand j'étais enfant (comme beaucoup :)),
                                je me suis finalement passionné par le web, autodidacte depuis de nombreuses années en parallele de mon travail
                                j'ai finalement décidé de me reconvertir et de vivre de ma passion, s'en ai suivi une formation diplomante en tant que <strong>developpeur
                                    d'application PHP et Symfony </strong> en 2020.
                            </p>
                            <p class="my-5">
                                Aujourd'huit freelance, j'ai pu déja réaliser plusieurs projets, ce que j'aime dans ce métié en dehors du coté technique
                                et de pouvoir apporter une solution au problemes des mes clients, en tant que prestataire j'essaye au maximum de comprendre le
                                besoin et d'apporter une solution simple, rapide et éfficace.
                            </p>
                        </div>
                    </div>


                </div>
                <div class="col-lg-6 d-lg-block d-none">
                    <div class="section_career__photo"></div>
                </div>
            </div>


        </div>


    </section>



    {% include "front/include/_services.html.twig" %}
    {% include "front/include/_competences.html.twig" %}
    {% block body %}

    {% endblock %}

    {% include "front/include/_contact.html.twig" %}
    {% block javascript %}
    {% endblock %}
    <script src="{{ asset('build/js/app.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/animejs@3.0.1/lib/anime.min.js"></script>
    <script>




        window.addEventListener("DOMContentLoaded", (event) => {

            document.getElementById('call-menu').addEventListener('click',function (e){
                e.preventDefault();
                e.stopPropagation();
                const menu = document.getElementById(this.dataset.target);
                menu.classList.toggle('d-none');

            })
            document.querySelector('body').addEventListener('click',() =>{
                hiddenMenu();
            })

            function hiddenMenu(){
                const menu = document.getElementById("menu");
                if(!menu.classList.contains('d-none')){
                    menu.classList.toggle('d-none');
                }
            }



            let anchors = document.querySelectorAll('.smooth-scroll');

            for (i=0 ; i < anchors.length ; i++){
                anchors[i].addEventListener('click',function (e){
                    e.preventDefault();
                    const menu = document.getElementById("menu");
                    hiddenMenu();
                    smoothScroll(document.querySelector(this.dataset.anchor));
                })
            }



            function smoothScroll(anchor){
                const scrollElement = window.document.scrollingElement || window.document.body || window.document.documentElement;
                anime({
                    targets:scrollElement,
                    scrollTop: anchor.getBoundingClientRect().top + pageYOffset -90 ,
                    duration: 900,
                    easing: 'easeInOutQuad'
                })
            }

            //document.getElementById('title-head').style.left = '1000px';
            document.getElementById('title-head').style.opacity = 0;
            const service = document.getElementById('service');
            let elms = document.querySelectorAll('.inViewPort');

            for (i=0;i<elms.length;i++){
                elms[i].dataset.animate = "false";
                if(elms[i].dataset.direction === "right")
                    elms[i].style.left = '-500px';
                if(elms[i].dataset.direction === "left")
                    elms[i].style.left = '500px';
                elms[i].style.opacity = 0;
            }

            let top = true;
            setInterval(function (){

                for (i=0;i<elms.length;i++){
                    let elm = elms[i];
                    if(elm.getBoundingClientRect().top + (pageYOffset - window.innerHeight ) <
                        pageYOffset &&
                        elm.dataset.animate === "false" ) {

                        elm.dataset.animate = "true";
                        if(elm.dataset.anime === "width"){
                            let width = elm.dataset.width;
                            elm.style.opacity = 1;
                            let color = elm.style.color;
                            elm.style.color = "transparent"
                            anime({
                                targets:elm,
                                width:width,
                                opacity:1,
                                duration: 1500,
                                easing:'linear',
                                complete: function(anim) {

                                    elm.style.color = color;
                                }

                            });
                        }else if(elm.dataset.anime === "scale"){
                            elm.style.opacity = 1;
                            console.log(elm);
                             anime({
                                targets:elm,
                                scale: [{value:1.6,duration:1,delay:elm.dataset.delay},{value:1,delay: 500}],

                                 easing:"linear",
                                 duration:1

                            });

                        } else{
                             anime({
                                targets:elm,
                                left:0,
                                opacity:1,
                                duration: 300,

                                easing: 'linear'

                            });
                        }

                    }//detect
                }


                if(pageYOffset <= 430 && !top){
                    let navAnime = anime({
                        targets: '#nav',
                        backgroundColor : '#ffffffa1',
                        marginTop: '10px',
                        duration: 500
                    })
                    top = true;
                }

                if(pageYOffset > 430 && top){
                    let navAnime = anime({
                        targets: '#nav',
                        backgroundColor : '#ffffff',
                        marginTop: 0,
                        duration: 500
                    })
                    top = false;
                }

            },1)

            let widthBackground;
            let heightBackground;
            let backgroundSize ;
            let backgroundNb = 0
            function initializeBackground(){
                console.log('resize');
                widthBackground = document.getElementById('background').getBoundingClientRect().width;
                heightBackground = document.getElementById('fade').getBoundingClientRect().height;


                if(widthBackground * 0.67  > heightBackground)
                    backgroundSize = (widthBackground+100);
                else
                    backgroundSize = "auto "+(heightBackground);

                console.log(backgroundSize);
                document.getElementById('background').style.backgroundSize = backgroundSize+'px';
            }

            window.addEventListener('resize',initializeBackground)
            initializeBackground();
            let zoom = Math.random()*300+500;
            let xRandom = Math.random()*100;
            let yRandom = Math.random()*100;



            let background = anime({
                targets:'#background',
                backgroundPositionX:xRandom+"%",
                backgroundPositionY:yRandom+"%",
                backgroundSize:(backgroundSize+zoom)+'px',

                duration: 15000,
                easing:'linear',
                complete: function(anim) {
                    xRandom = Math.random()*100;
                    yRandom = Math.random()*100;
                    zoom = Math.random()*300+500
                    anime({
                        targets:'#fade',
                        backgroundColor: '#333333',
                        easing:'linear',
                        complete: function (){
                            backgroundNb ++;
                            if(backgroundNb > 1)
                                backgroundNb = 0;
                            document.getElementById('background').style.backgroundPositionY = "100%";
                            document.getElementById('background').style.backgroundPositionX = "100%";
                            document.getElementById('background').style.backgroundImage = "url(/img/background"+backgroundNb+".jpg)"
                            background.play();
                            anime({
                                targets:'#fade',
                                backgroundColor: "rgba(0,0,0,0)",
                                easing:'linear',
                                complete: function () {

                                }
                            });

                        }

                    })




                }

            })

            let animation = anime({
                targets: '.bloc-title',

                opacity:1,
                duration:3000,
                easing:'linear'

            });
            animation.play()
        });


    </script>
    </body>
</html>
